name: Build Fabulist

on:
  push:
    branches:
    - 'main'

jobs:
  create-release:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}
      id: ${{ steps.create_release.outputs.id }}

    steps:
    - uses: actions/checkout@v2

    - uses: mathieudutour/github-tag-action@v6.0
      id: tag_version
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - uses: ncipollo/release-action@v1
      id: create_release
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Fabulist ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
        prerelease: true
        draft: true

  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.lua == '5.1' }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        configuration: [ RelWithDebInfo, MinSizeRel ]
        lua: [ "5.1", "5.2", "5.3", "5.4" ]

    steps:
    - uses: actions/checkout@v2
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - uses: novelrt/setup-cpp@v1

    - name: Generate build system
      shell: bash
      run: |
        cmake \
          -DCMAKE_BUILD_TYPE="${{ matrix.configuration }}" \
          -DCMAKE_INSTALL_PREFIX=inst \
          -DFABULIST_LUA_VERSION="${{ matrix.lua }}" \
          -DFABULIST_ALL_ON=ON \
          -Wdev -Wdeprecated -Werror=dev -Werror=deprecated -S . -B build

    - name: Build Fabulist
      run: cmake --build build --parallel --config ${{ matrix.configuration }} --verbose

    - name: Generate artifact
      run: cmake --install build --config ${{ matrix.configuration }} --verbose

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: fabulist-${{ matrix.os }}-${{ matrix.configuration }}-lua${{ matrix.lua }}
        path: inst

  merge-artifacts:
    needs: [build, create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        lua: [ "5.1", "5.2", "5.3", "5.4" ]

    outputs:
      release-id: ${{ needs.create-release.outputs.id }}

    steps:
    - uses: actions/download-artifact@v2
      with:
        path: artifacts
    - name: Merge build artifacts
      run: |
        mkdir merged
        for artifact in $(find ./artifacts/ -type d -name "fabulist-${{ matrix.os }}-*-lua${{ matrix.lua }}"); do
            cp -RT "$artifact" merged/
        done
    - name: Upload merged artifacts
      uses: actions/upload-artifact@v2
      with:
        name: fabulist-${{ matrix.os }}-lua${{ matrix.lua }}
        path: merged

    - uses: actions/download-artifact@v2
      with:
        name: fabulist-${{ matrix.os }}-lua${{ matrix.lua }}

    - name: Create release artifact
      run: |
        cd merged
        zip -r "../fabulist-${{ matrix.os }}-lua${{ matrix.lua }}.zip" .
        cd ..

    - name: Add merged artifacts to release
      run: gh release upload "${{ needs.create-release.outputs.tag }}" "fabulist-${{ matrix.os }}-lua${{ matrix.lua }}.zip" --repo "$GITHUB_REPOSITORY"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-release:
    needs: merge-artifacts
    runs-on: ubuntu-latest

    steps:
    - run: gh api "repos/$GITHUB_REPOSITORY/releases/${{ needs.merge-artifacts.outputs.release-id }}" -X PATCH -F draft=false --silent
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
